# Define simple linear regression model
l <- lm(ta ~ age + bp)
summary(e)$coef
summary(l)$coefficients
m <- lvm(bp ~ age + inj, ta ~ age + bp)
# Display SEM.
plot(m)
# Estimate model
e <- estimate(m, control = list(constrain = T))
# Summary of model fits
summary(e)
a <-
runif(10)
runif(10)
runif(10) <- 0.05
runif(10) < 0.05
sum(runif(10) < 0.05)
tot <- 0
for (i in 1:100{if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(1) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(2) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:100){if (sum(runif(10) < 0.05) > 0){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:10000){if (sum(runif(10) < 0.05) > 2){tot <- tot + 1}}
tot
tot <- 0
for (i in 1:10000){if (sum(runif(10) < 0.1) > 3){tot <- tot + 1}}
tot
install.packages('shiny')
library('shiny')
?runApp
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
install.packages('UsingR')
library('UsingR')
data(galton)
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
x <- 0
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
runApp('~/Documents/projects/shinyStart/')
install.packages('rCharts')
install.packages('googleVIs')
install.packages('googleVis')
library('devtools')
install_github("ramnathv/rCharts@dev")
install.packages('googleVis')
library('rCharts')
install.packages('rCharts')
require(devtools)
install_github('ramnathv/rCharts')
require(rCharts)
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart', data = subset(haireye, Sex == 'Male'))
hairey
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
cat('<iframe src = "fig/n1.html" width = 100%, height = 600>/iframe>')
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
?n1$save
n1$save('fig/n1.html', cdn = TRUE)
n1$save('n1.html', cdn = TRUE)
getwd()
cat('<iframe src = "n1.html" width = 100%, height = 600>/iframe>')
cat('<iframe src = "n1.html" width = 100%, height = 600>/iframe>')
cat('<iframe src = "n1.html" width = 100%, height = 600></iframe>')
n1
n1$html()
n1$html
name(iris) = gsub('\\.', '', names(iris))
names(iris) <- gsub('\\.', '', names(iris))
names(iris)
r1 <- rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
names(iris) <- gsub('\\.', '', names(iris))
r1 <- rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1$save('r1.html', cdn = TRUE)
r1
hair_eye <- as.data.frame(HairEyeColor)
hair_eye <- as.data.frame(HairEyeColor)
r2 <- rPlot(Freq ~ Hair | Eye, color = "Eye", data = hair_eye, type = 'bar')
r2$save('r2.html', cdn = TRUE)
r2
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = 'gear')
r1$print("chart1")
r1$save('myPlot.html') # save as html file
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = 'gear')
r1$print("chart1")
r1$publish('myPlot', host = 'gist') # save to gist, rjson required
r1$publish('myPlot', host = 'rpubs') # save to rpubs
data(economics, packages = 'ggplot2')
data(economics, package = 'ggplot2')
econ <- transform(economics, data = as.character(date))
m1 <- mPlot(x = 'date', y = c('psavert', 'uempmed'), type = 'Line', data = econ)
m1$set <- pointSize = 0, lineWidth = 1)
m1$set(pointSize = 0, lineWidth = 1)
m1$save('m1.html', cdn = TRUE)
m1
require(reshape2)
uspexp <- melt(USPersonalExpenditure)
names(uspexp)[1:2] <- c('category', 'year')
require(reshape2)
uspexp <- melt(USPersonalExpenditure)
names(uspexp)[1:2] <- c('category', 'year')
x1 <- xPlot(value ~ year, group = 'category', data = uspexp, type = 'line-dotted')
x1$save('x1.html', cdn = TRUE)
x1
map3 <- Leaflet$new()
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup'</p>")
map3marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup'</p>")
map3$save('map3.html', cdn = TRUE)
map3
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup'</p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup'</p>")
map3$save('map3.html', cdn = TRUE)
map3
usp <- reshape2::melt(USPersonalExpenditure)
# get the decades into a date Rickshaw likes
usp$Var2 <- as.numeric(as.POSIXct(paste0(usp$Var2, "-01-01")))
p4 <- Rickshaw$new()
p4$layer(value ~ Var2, group = 'Var1', data = usp, type = 'area', width = 560)
# add a helpful slider this easily, other features TRUE as default
p4$set(slider = TRUE)
p4$save('p4.html', cdn = TRUE)
p4
h1 <- hPlot(x = 'Wr.Hnd', y = 'NW.Hnd', data = MASS:survey, type = c('line', 'bubble', 'scatter'), group = 'Clap', size = 'Age')
libraty(MASS)
library(MASS)
h1 <- hPlot(x = 'Wr.Hnd', y = 'NW.Hnd', data = MASS:survey, type = c('line', 'bubble', 'scatter'), group = 'Clap', size = 'Age')
h1 <- hPlot(x = 'Wr.Hnd', y = 'NW.Hnd', data = MASS::survey, type = c('line', 'bubble', 'scatter'), group = 'Clap', size = 'Age')
h1$save('h1.html', cdn = TRUE)
h1
85+59
67^5
69^5
(69^5)*26
factorial(8)/(factorial(2)*factorial(6))
8*7*6
8*7
3400+2412+2400+3175
library('shiny')
load(cars)
library(cars)
library(datasets)
load(cars)
data(cars)
cars
data("USArrests")
dd <- data("USArrests")
dd
dd <- data(USArrests)
dd
dd <- data(cars)
library(cars)
library(datasets)
data(cars)
data(cars)
cars
USArrests
library(datasets)
data(USArrests)
USArrests
library('shiny')
getwd()
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
shinyUI(pageWithSidebar(
))
data("airmiles")
airmiles
data("airquality")
airquality
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
plot(airquality[,'Ozone'])
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
plot(airquality[,'Ozone'])
lines(airquality[,'Ozone'])
plot(airquality[,'Ozone'], type = 'line')
plot(airquality[,'Temp'], type = 'line')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
selectInput("Select", label = h3("Select box"), choices = list("Ozone" = 1, "Solar R" = 2, "Wind" = 3, "Temp" = 4), selected = 1),
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
names(airquality)
names(airquality)[1:4]
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
data(airquality)
library('shiny')
library(datasets)
data(airquality)
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
library('shiny')
library(datasets)
data(airquality)
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/')
runApp('~/Desktop/coursera/developing_data_products/project/')
runApp('~/Desktop/coursera/developing_data_products/project/')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
airquality
head(airquality()
head(airquality)
head(airquality)
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
sert <- data(serotonin, package = 'lava')
verbatimTextOutput('oid1')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
library(shiny)
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
pred <- c('age', 'mem', 'gene1', 'gene2')
pred[1 2]
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
pred
paste(pred, collapse = '+')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
plot(0)
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
?isolate
??isolate
?renderPlot
library('shiny')
?isolate
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
a <- ""
length(a)
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
sert <- data(serotonin, package = 'lava')
names(sert)
sert
sert
data(serotonin, package = 'lava')
names(serotonin)
mean(serotonin$age) - serotonin$age
names(serotonin)
serotonin$age.orig <- serotonin$age
serotonin$mem.orig <- serotonin$mem
serotonin$age <- mean(serotonin$age.orig) - serotonin$age.orig
serotonin$mem <- mean(serotonin$mem.orig) - serotonin$mem.orig
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
f <- 'cau ~ age'
l <- lm(d, data = serotonin)
l <- lm(f, data = serotonin)
l$coefficients
l$model[,'age']
f <- 'cau ~ age'
l <- lm(f, data = serotonin)
adj <- l$coefficients[1] + l$residuals + l$coefficients['age']*l$model[,'age']
plot(serotonin[,'cau'] ~ adj)
l$coefficients[1]
l$residuals
l$coefficients['age']
l$model[,'age']
plot(serotonin[,'cau'] ~ serotonin[,'age'])
adj <- l$coefficients[1] + l$residuals
plot(serotonin[,'cau'] ~ serotonin[,'age'])
plot(serotonin[,'cau'] ~ adj)
plot(adj ~ serotonin[,'age'])
f <- 'cau ~ age + mem'
l <- lm(f, data = serotonin)
adj <- l$coefficients[1] + l$residuals
plot(adj ~ serotonin[,'age'])
adj <- l$coefficients[1] + l$residuals + l$coefficients['age']*l$model[,'age']
library('shiny')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
?if
?else
?if
?
?plot
library(beeswarm)
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
?abline
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
library(beeswarm)
library(lava)
data(serotonin, package = 'lava')
names(serotonin)
serotonin$age.orig <- serotonin$age
serotonin$mem.orig <- serotonin$mem
serotonin$age <- mean(serotonin$age.orig) - serotonin$age.orig
serotonin$mem <- mean(serotonin$mem.orig) - serotonin$mem.orig
region <- c('cau', 'th', 'put', 'mid')
region.name <- c('Caduate', 'Thalamus', 'Putamen', 'Midbrain')
pred <- c('age', 'mem', 'gene1', 'gene2')
pred.name <- c('Age', 'Memory Performance', 'Gene Variant 1', 'Gene Variant 2')
f <- 'cau ~ age + mem'
l <- lm(f, data = serotonin)
names(l$model)
names(l$model)[-1]
which(names(l$model) == 'age')
names(l$model)[-c(1, names(l$model) == 'age')]
names(l$model)[-c(1, which(names(l$model) == 'age'))]
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
runApp('~/Desktop/coursera/developing_data_products/project/', display.mode = 'showcase')
setwd('~/Desktop/coursera/developing_data_products/project/')
library(slidify)
library(shiny)
slidify('index.Rmd')
setwd('~/Desktop/coursera/developing_data_products/project/ddp_pres')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
setwd('~/Desktop/coursera/developing_data_products/project')
author('ddp_pres')
slidify('index.Rmd')
browseURL('index.html')
